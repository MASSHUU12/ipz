openapi: 3.0.3
info:
  title: User API
  description: API for managing the current authenticated user's account
  version: 1.2.0

servers:
  - url: http://0.0.0.0:8000/api
    description: Local API server
  - url: https://185.238.73.59/api
    description: Main API server

paths:
  /api/user:
    get:
      operationId: showCurrentUser
      summary: Get Current User
      description: Retrieves the currently authenticated user's information.
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
    patch:
      operationId: updateCurrentUser
      summary: Update Current User
      description: Updates the currently authenticated user's information.
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address (must be unique among all users except current user)
                phone_number:
                  type: string
                  description: User's phone number in international format (must be unique among all users except current user)
                  maxLength: 20
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated successfully"
                  user:
                    $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "422":
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error422"
              examples:
                emailInUse:
                  summary: Email Already in Use
                  value:
                    message: "The email has already been taken."
                    errors:
                      email: ["The email has already been taken."]
    delete:
      operationId: destroyCurrentUser
      summary: Delete Current User
      description: Permanently deletes the currently authenticated user's account.
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User deleted successfully"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error401"
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "There was an error during user deletion"
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 1
        email:
          type: string
          format: email
          example: "user@example.com"
        phone_number:
          type: string
          example: "+48 123456789"
        email_verified_at:
          type: string
          format: date-time
          nullable: true
        phone_number_verified_at:
          type: string
          format: date-time
          nullable: true
        created_at:
          type: string
          format: date-time
          example: "2025-03-10T11:43:23.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-03-19T09:22:15.000000Z"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/Role"
    Role:
      type: object
      properties:
        id:
          type: integer
          example: 1
        name:
          type: string
          example: "User"
        guard_name:
          type: string
          example: "web"
        created_at:
          type: string
          format: date-time
          example: "2025-04-04T11:18:14.000000Z"
        updated_at:
          type: string
          format: date-time
          example: "2025-04-04T11:18:14.000000Z"
        pivot:
          type: object
          properties:
            model_type:
              type: string
              example: "App\\Models\\User"
            model_id:
              type: integer
              example: 1
            role_id:
              type: integer
              example: 1
    Error401:
      type: object
      properties:
        message:
          type: string
          example: "Unauthenticated."
    Error422:
      type: object
      properties:
        message:
          type: string
          example: "The email has already been taken."
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
  x-account-security:
    description: |
      The system implements the following account security features:
      - Failed login attempts are tracked
      - After 5 failed login attempts, the account will be temporarily blocked for 4 hours
      - Failed login counter is reset after a successful login
      - When an account is blocked, login attempts and any protected routes will be rejected until the block expires
  x-validation-rules:
    email:
      description: |
        - Must be a valid email format
        - Must be unique in the system
    phone_number:
      description: |
        - Must be unique in the system
        - Maximum length: 20 characters
        - Must be a valid international phone number format
