openapi: 3.0.3
info:
  title: Air Quality API
  description: |
    API for retrieving air quality data for locations in Poland by leveraging
    the GIOŚ (Chief Inspectorate of Environmental Protection) data service.
  version: 1.0.1
servers:
  - url: https://example.com
    description: Main API server
tags:
  - name: Air Quality
    description: Operations related to air quality data
  - name: Addresses
    description: Suggestion endpoints

paths:
  /air-quality:
    get:
      summary: Get air quality for a specific location
      description: |
        Returns detailed air quality information for a specific location in Poland,
        including measurements from the nearest monitoring station, air quality index,
        and forecasts if available. You may specify either `lat`/`lon` **or** `addr`.
      operationId: getAirQuality
      tags:
        - Air Quality
      parameters:
        - name: lat
          in: query
          description: Latitude coordinate (must be within Poland's range; required if `addr` is not provided)
          required: false
          schema:
            type: number
            format: float
            minimum: 49.0
            maximum: 55.0
            example: 52.2297
        - name: lon
          in: query
          description: Longitude coordinate (must be within Poland's range; required if `addr` is not provided)
          required: false
          schema:
            type: number
            format: float
            minimum: 14.0
            maximum: 24.0
            example: 21.0122
        - name: addr
          in: query
          description: Fuzzy name of the city/station—required if `lat`/`lon` are not provided
          required: false
          schema:
            type: string
            example: "Szczecin Żołnierska"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AirQualityResponse"
        "400":
          description: Validation error (must supply either lat+lon or addr)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse422"
        "404":
          description: No measuring stations or no matching location found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse500"
      # Custom validation rule: require either (lat and lon) OR addr
      x-validator:
        anyOf:
          - required: [lat, lon]
          - required: [addr]

  /addresses/suggest:
    get:
      summary: Suggest available locations by partial query
      description: |
        Returns up to 10 suggested station names based on a fuzzy match
        of the supplied query string.
      operationId: suggestAddresses
      tags:
        - Addresses
      parameters:
        - name: q
          in: query
          description: Partial name of the city or station
          required: true
          schema:
            type: string
            example: "warsz"
      responses:
        "200":
          description: List of suggested location names
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestions:
                    type: array
                    items:
                      type: string
                    example:
                      - "Warszawa-Centrum"
                      - "Warszawa-Wawer"
        "401":
          description: Unauthorized (if endpoint is protected)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse401"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse500"

components:
  schemas:
    AirQualityResponse:       # unchanged...
      type: object
      properties:
        success:
          type: boolean
          example: true
        timestamp:
          type: string
          format: date-time
          example: "2025-03-25 11:28:11"
        request:
          type: object
          properties:
            latitude:
              type: number
              format: float
              example: 52.2297
            longitude:
              type: number
              format: float
              example: 21.0122
        data:
          type: object
          properties:
          # ... existing station, airQuality, measurements, forecasts ...
    ErrorResponse404:         # unchanged...
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "No measuring stations found"
    ErrorResponse422:         # renamed from 400 to 422
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validation error"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            lat:
              - "The lat field is required when addr is not present."
    ErrorResponse500:         # unchanged...
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Failed to retrieve air quality data"
        error:
          type: string
          example: "Error message details"
    ErrorResponse401:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Unauthorized"
