openapi: 3.0.3
info:
  title: Air Quality API
  description: |
    API for retrieving air quality data for locations in Poland by leveraging
    the GIOŚ (Chief Inspectorate of Environmental Protection) data service.
  version: 1.1.0
servers:
  - url: http://0.0.0.0:8000/api
    description: Local API server
  - url: https://185.238.73.59/api
    description: Main API server
tags:
  - name: Air Quality
    description: Operations related to air quality data
  - name: Addresses
    description: Suggestion endpoints

paths:
  /air-quality:
    get:
      summary: Get air quality for a specific location
      description: |
        Returns detailed air quality information for a specific location in Poland,
        including measurements from the nearest monitoring station, air quality index,
        and forecasts if available. You may specify either `lat`/`lon` **or** `addr`.
      operationId: getAirQuality
      tags:
        - Air Quality
      parameters:
        - name: lat
          in: query
          description: Latitude coordinate (must be within Poland's range; required if `addr` is not provided)
          required: false
          schema:
            type: number
            format: float
            minimum: 49.0
            maximum: 55.0
            example: 52.2297
        - name: lon
          in: query
          description: Longitude coordinate (must be within Poland's range; required if `addr` is not provided)
          required: false
          schema:
            type: number
            format: float
            minimum: 14.0
            maximum: 24.0
            example: 21.0122
        - name: addr
          in: query
          description: Fuzzy name of the city/station—required if `lat`/`lon` are not provided
          required: false
          schema:
            type: string
            example: "Szczecin Żołnierska"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AirQualityResponse"
        "400":
          description: Validation error (must supply either lat+lon or addr)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse422"
        "404":
          description: No measuring stations or no matching location found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse404"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse500"
      x-validator:
        anyOf:
          - required: [lat, lon]
          - required: [addr]

  /addresses/suggest:
    get:
      summary: Suggest available locations by partial query
      description: |
        Returns up to 10 suggested station names based on a fuzzy match
        of the supplied query string.
      operationId: suggestAddresses
      tags:
        - Addresses
      parameters:
        - name: q
          in: query
          description: Partial name of the city or station
          required: true
          schema:
            type: string
            example: "warsz"
      responses:
        "200":
          description: List of suggested location names
          content:
            application/json:
              schema:
                type: object
                properties:
                  suggestions:
                    type: array
                    items:
                      type: string
                    example:
                      - "Warszawa-Centrum"
                      - "Warszawa-Wawer"
        "401":
          description: Unauthorized (if endpoint is protected)
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse401"
        "500":
          description: Server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse500"

components:
  schemas:
    AirQualityResponse:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          example: "2025-03-25T11:28:11Z"
        request:
          type: object
          required:
            - latitude
            - longitude
          properties:
            latitude:
              type: number
              format: float
              example: 52.2297
            longitude:
              type: number
              format: float
              example: 21.0122
        station:
          $ref: "#/components/schemas/Station"
        airQuality:
          $ref: "#/components/schemas/AirQuality"
        measurements:
          type: array
          items:
            $ref: "#/components/schemas/Measurement"
        forecasts:
          type: object
          description: Forecast data keyed by pollutant code
          additionalProperties:
            type: array
            items:
              $ref: "#/components/schemas/ForecastEntry"
      required:
        - timestamp
        - request
        - station
        - airQuality
        - measurements
        - forecasts

    Station:
      type: object
      properties:
        id:
          type: integer
          example: 123
        name:
          type: string
          example: "Warszawa-Centrum"
        gegrLat:
          type: number
          format: float
          example: 52.2297
        gegrLon:
          type: number
          format: float
          example: 21.0122
        communeId:
          type: string
          example: "146501"
        communeName:
          type: string
          example: "Warszawa"
        addressStreet:
          type: string
          example: "ul. Marszałkowska"
      required:
        - id
        - name
        - gegrLat
        - gegrLon

    AirQuality:
      type: object
      properties:
        index:
          type: string
          example: "Good"
        pollutants:
          type: object
          properties:
            pm10:
              $ref: "#/components/schemas/PollutantLevel"
            pm25:
              $ref: "#/components/schemas/PollutantLevel"
            no2:
              $ref: "#/components/schemas/PollutantLevel"
            so2:
              $ref: "#/components/schemas/PollutantLevel"
            o3:
              $ref: "#/components/schemas/PollutantLevel"
            co:
              $ref: "#/components/schemas/PollutantLevel"
      required:
        - index
        - pollutants

    PollutantLevel:
      type: object
      properties:
        value:
          type: number
          nullable: true
          example: 12.3

    Measurement:
      type: object
      properties:
        parameter:
          type: string
          example: "PM10"
        code:
          type: string
          example: "PM10"
        value:
          type: number
          example: 35.4
        unit:
          type: string
          example: "µg/m³"
        measurementTime:
          type: string
          format: date-time
          example: "2025-03-25T10:00:00Z"
      required:
        - parameter
        - code
        - value
        - unit
        - measurementTime

    ForecastEntry:
      type: object
      properties:
        date:
          type: string
          format: date-time
          example: "2025-03-26T00:00:00Z"
        indexLevel:
          type: string
          example: "Moderate"
      required:
        - date
        - indexLevel

    ErrorResponse404:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "No measuring stations found"

    ErrorResponse422:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Validation error"
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string
          example:
            lat:
              - "The lat field is required when addr is not present."

    ErrorResponse500:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Failed to retrieve air quality data"
        error:
          type: string
          example: "Error message details"

    ErrorResponse401:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: "Unauthorized"
